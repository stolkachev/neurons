<!doctype html>
<html>

<head>
    <title>NNOD Dialog Editor</title>

    <script type="text/javascript" src="js/vis.js"></script>
    <link href="nnod_editor.css" rel="stylesheet" type="text/css" />

    <script type="text/javascript">
        var nodes = null;
        var shapes = null;
        var edges = null;
        var shapes_edges = null;
        var network_of_nodes = null;
        var network_of_shapes = null;
        var current_shape = 'square'

        // convenience method to stringify a JSON object
        function toJSON(obj) {
            return JSON.stringify(obj, null, 4);
        }

        function draw() {
            shapes = new vis.DataSet();
            var mynetwork = document.getElementById('shapes');
            var x = 0;
            var y = 0;
            var step = 120;

            shapes.add({
                id: 1000,
                x: x,
                y: y,
                label: 'Starter',
                group: 'starters',
                value: 1,
                fixed: true,
                physics: false
            });
            shapes.add({
                id: 1001,
                x: x,
                y: y + step,
                label: 'Semaphore',
                group: 'semaphores',
                value: 1,
                fixed: true,
                physics: false
            });
            shapes.add({
                id: 1002,
                x: x,
                y: y + 2 * step,
                label: 'Prompt',
                group: 'prommpts',
                value: 1,
                fixed: true,
                physics: false
            });
            shapes.add({
                id: 1003,
                x: x,
                y: y + 3 * step,
                label: 'Trigger',
                group: 'triggers',
                value: 1,
                fixed: true,
                physics: false
            });

            nodes = new vis.DataSet();
            var mynetwork = document.getElementById('nodes');
            nodes.add([{
                id: '1',
                label: 'Node 1'
            }, {
                id: '2',
                label: 'Node 2'
            }, {
                id: '3',
                label: 'Node 3'
            }, {
                id: '4',
                label: 'Node 4'
            }, {
                id: '5',
                label: 'Node 5'
            }]);

            // create an array with edges
            edges = new vis.DataSet();

            edges.add([{
                id: '1',
                from: '1',
                to: '2'
            }, {
                id: '2',
                from: '1',
                to: '3'
            }, {
                id: '3',
                from: '2',
                to: '4'
            }, {
                id: '4',
                from: '2',
                to: '5'
            }]);

            // create a networks
            var container_of_nodes = document.getElementById('nodes');
            var container_of_shapes = document.getElementById('shapes');

            var data_nodes = {
                nodes: nodes,
                edges: edges
            };
            var data_shapes = {
                nodes: shapes,
                edges: shapes_edges
            };

            var options_nodes = {
                orientation: 'top',
                groupOrder: 'order',
                showCurrentTime: false,
                align: 'left',
                nodes: {
                    shape: 'dot'
                },
                edges: {
                    color: 'gray',
                    smooth: false
                },
                groups: {
                    starters: {
                        shape: 'ellipse',
                        color: '#FF9900' // orange
                    },
                    semaphores: {
                        shape: 'dot',
                        color: "#2B7CE9" // blue
                    },
                    prommpts: {
                        shape: 'square',
                        color: "#5A1E5C" // purple
                    },
                    triggers: {
                        shape: 'star',
                        color: "#C5000B" // red
                    }
                },
                physics: {
                    enabled: false
                },
                interaction: {
                    hover: true,
                    zoomView: true
                },
                manipulation: {
                    enabled: true
                },
                layout: {
                    randomSeed: 0
                }
            };

            var options_shapes = {
                orientation: 'top',
                groupOrder: 'order',
                showCurrentTime: false,
                align: 'center',
                nodes: {
                    shape: 'dot',
                    fixed: {
                        y: true,
                        x: true
                    }
                },
                edges: {
                    color: 'gray',
                    smooth: false
                },
                groups: {
                    starters: {
                        shape: 'ellipse',
                        color: '#FF9900' // orange
                    },
                    semaphores: {
                        shape: 'dot',
                        color: "#2B7CE9" // blue
                    },
                    prommpts: {
                        shape: 'square',
                        color: "#5A1E5C" // purple
                    },
                    triggers: {
                        shape: 'star',
                        color: "#C5000B" // red
                    }
                },
                physics: {
                    enabled: false
                },
                interaction: {
                    hover: true,
                    zoomView: false
                },
                manipulation: {
                    enabled: false
                },
                layout: {
                    randomSeed: 0
                }
            };

            network_of_nodes = new vis.Network(container_of_nodes, data_nodes, options_nodes);
            network_of_shapes = new vis.Network(container_of_shapes, data_shapes, options_shapes);


            network_of_nodes.on("click", function(params) {
                // params.event = "[original event]";
                // document.getElementById('eventSpan').innerHTML = '<h2>Click event:</h2>' + JSON.stringify(params, null, 4);
                // console.log('click event, getNodeAt returns: ' + this.getNodeAt(params.pointer.DOM));
            });
            network_of_nodes.on("doubleClick", function(params) {
                // params.event = "[original event]";
                // document.getElementById('eventSpan').innerHTML = '<h2>doubleClick event:</h2>' + JSON.stringify(params, null, 4);
            });

            network_of_nodes.on("select", function(params) {
                console.log('select Event:', params);
            });

            network_of_nodes.on("selectNode", function(params) {
                console.log('selectNode Event:', params);
                network_of_nodes.clustering.updateClusteredNode(params.nodes[0], {
                    shape: current_shape
                });
            });

            network_of_shapes.on("selectNode", function(params) {
                console.log('selectNode Event:', params);
                if (params.nodes[0] >= 1000 && params.nodes[0] <= 1004) {
                    current_shape = network_of_shapes.clustering.body.nodes[params.nodes[0]].shape.constructor.name.toLowerCase();
                };

            });
        }
        var resizeTimeOut;
        window.onresize = function(event) {
            event.stopPropagation();
            event.preventDefault();
            clearTimeout(resizeTimeOut);
            resizeTimeOut = setTimeout(Redraw, 500);
            return false;
        };

        function Redraw() {
            var mynetwork = document.getElementById('nodes');
            var x1 = window.innerWidth - 100;
            var y1 = window.innerHeight - 130;
            mynetwork.style.width = x1 + "px";
            mynetwork.style.height = y1 + "px";
            mynetwork.style.left = "90px";
            draw();
        };
    </script>

</head>

<body onload="Redraw();">
    <img src="js/img/256gl.png" height="80" width="450">
    <div id="shapes"></div>
    <div id="nodes"></div>

</body>

</html>